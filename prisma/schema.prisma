generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  brackets      Bracket[]
  sessions      Session[]
  Video         Video[]
}

model Bracket {
  id          String   @id @default(cuid())
  name        String
  playlistId  String
  userId      String
  dateCreated DateTime @default(now())
  updatedAt   DateTime @updatedAt
  featured    Boolean  @default(false)
  createdBy   User     @relation(fields: [userId], references: [id])
  videos      Video[]
}

model Video {
  id        String   @id @default(cuid())
  videoId   String
  wins      Int?     @default(0)
  bracketId String?
  title     String?
  thumbnail String?
  userId    String
  Bracket   Bracket? @relation(fields: [bracketId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
